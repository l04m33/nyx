#! stdtmpl
#proc pageList(shelf: TableRef[int, TransEntry]): string =
#   result = ""
<html>
    <head>
        <meta http-equiv="content-type" content="text/html; charset=utf-8">
        <title>FileHub</title>

        <style>
            body, div, span, ul, li, form, input, label, a { margin: 0px; padding: 0px; }
            .hidden { display: none; }
            .main-container { min-width: 300px; max-width: 960px; margin: 0px auto; }
            .upload-ui { margin: 0px 10px; }
            .progress-list {
                margin-top: 10px;
                padding: 5px 0px;
                background-color: #fafafa;
                border-radius: 5px;
            }
            .progress-container { position: relative; }
            .progress-bar {
                z-index: 11;
                position: absolute;
                width: 0px;
                height: 44px;
                background-color: #ccf;
                opacity: 0.5;
                border-bottom: 1px solid #ccc;
                border-right: 1px solid #ccc;
            }
            .progress-file-name {
                z-index: 12;
                position: relative;
                width: auto;
                height: 14px;
                padding: 2px 10px;
                font-size: 12px;
                color: #777;
            }
            .progress-message {
                z-index: 13;
                position: relative;
                width: auto;
                height: 18px;
                padding: 4px 10px;
                text-align: center;
                font-size: 16px;
                color: #87d;
            }
            .file-list {
                cursor: pointer;
                background-color: #fafafa;
                list-style-type: none;
                padding: 5px 0px;
                margin-top: 10px;
                border-radius: 5px;
                color: #777;
            }
            .list-item { background: none; }
            .list-item:nth-child(2n+1) { background-color: #fff; }
            .file-list li { padding: 2px 10px; }
            .button {
                cursor: pointer;
                background-color: #f4f7ff;
                color: #777;
                text-align: center;
                padding: 20px 0px;
                margin: 10px auto 0px auto;
                border-radius: 5px;
                box-shadow: 0px 1px 1px #aaa;
                font-size: 20px;
                font-family: sans-serif;
                max-width: 240px;
            }
            .button:hover { box-shadow: 0px 2px 2px #aaa; }
            .button:active { box-shadow: 0px 1px 1px #aaa; }
            .drop-zone {
                display: none;
                position: fixed;
                height: 100%;
                width: 100%;
                left: 0px;
                top: 0px;
                z-index: 1;
                background-color: #000;
                opacity: 0.5;
                color: #eee;
                font-family: sans-serif;
                font-size: 32px;
                text-align: center;
            }
        </style>

    </head>

    <body>
        <div class="main-container">
            <div class="upload-ui">
                <form id="upload-form" name="upload" class="hidden" method="POST" enctype="multipart/form-data">
                    <input name="userfile" type="file" multiple required />
                </form>
                <ul id="file-list" class="file-list">
                    <li>No files selected.</li>
                </ul>

                <div id="submit-button" class="button">Send Files</div>
                <div id="select-button" class="button">Select Files</div>

                <div id="progress-list" class="progress-list">
                    <!--
                    <div class="progress-container">
                        <div class="progress-bar">
                        </div>
                        <div class="progress-message">
                            <span>Ready</span>
                        </div>
                    </div>
                    -->
                </div>
            </div>
            <div>
                <ul>
                    #for id, ent in pairs(shelf):
                    <li>
                        <a href="/recv?e=$id" target="_blank">
                            <span>$id</span> / <span>$ent.name</span>
                            #if not isNil(ent.tag) and ent.tag.len() > 0:
                            - <span>$ent.tag</span>
                            #end if
                        </a>
                    </li>
                    #end for
                </ul>
            </div>
            <div id="drop-zone" class="drop-zone">Drop files here.</div>
        </div>

        <script>
            (function() {
                function Transfer(f) {
                    this.domElement = document.createElement('div');
                    this.domElement.classList.add("progress-container");
                    this.domElement.classList.add("list-item");

                    var progressBar = document.createElement('div');
                    progressBar.classList.add("progress-bar");
                    this.domElement.appendChild(progressBar);

                    var progressFileName = document.createElement('div');
                    progressFileName.classList.add("progress-file-name");
                    progressFileName.textContent = f.name;
                    this.domElement.appendChild(progressFileName);

                    var progressMsg = document.createElement('div');
                    progressMsg.classList.add("progress-message");

                    var messageContent = document.createElement('span');
                    messageContent.textContent = "Ready";
                    progressMsg.appendChild(messageContent);

                    this.domElement.appendChild(progressMsg);

                    this.progressBar = progressBar;
                    this.messageContent = messageContent;

                    this.file = f;

                    var thiz = this;

                    this.updateProgress = function (percent) {
                        this.progressBar.style.width = percent + "%";
                        this.messageContent.textContent = percent + "%"
                    }

                    this.doUpload = function () {
                        var formData = new FormData(),
                            request = new XMLHttpRequest();

                        formData.append("userfile", this.file, this.file.name);

                        request.upload.addEventListener("progress", function(ev) {
                            var percentComplete = Math.min(ev.loaded / ev.total * 100, 100).toFixed(2);
                            thiz.updateProgress(percentComplete, true)
                        }, false);

                        request.upload.addEventListener("error", function(ev) {
                            console.log(ev);
                            thiz.showMsg("An error occured. Status: " + request.statusText);
                        }, false);

                        request.upload.addEventListener("abort", function(ev) {
                            console.log(ev);
                            thiz.showMsg("The transfer has been canceled.");
                        }, false);

                        request.addEventListener("load", function(ev) {
                            if (request.responseText != "Done.") {
                                thiz.showMsg("An error occured. Status: " + request.statusText + "; Response: " + request.responseText);
                            } else {
                                thiz.showMsg(request.responseText);
                            }
                        }, false);

                        request.open("POST", "send");
                        request.send(formData);
                    }

                    this.showMsg = function (msg) {
                        this.messageContent.textContent = msg;
                    }

                    return this;
                }

                var uploadForm = document.forms.namedItem("upload"),
                    fileInput = uploadForm.children[0],
                    submitButton = document.getElementById("submit-button"),
                    selectButton = document.getElementById("select-button"),
                    fileList = document.getElementById("file-list"),
                    selectedFiles = [],
                    dropZone = document.getElementById("drop-zone");

                function updateSelectedFiles(files) {
                    if (files && files.length > 0) {
                        selectedFiles = files;

                        fileList.innerHTML = "";
                        for (var i = 0; i < files.length; i++) {
                            var fileLine = document.createElement("li");
                            fileLine.textContent = files[i].name;
                            fileLine.classList.add("list-item");
                            fileList.appendChild(fileLine);
                        }

                        submitButton.classList.remove("hidden");
                        selectButton.classList.add("hidden");
                    } else {
                        selectedFiles = [];

                        fileList.innerHTML = "";
                        var fileLine = document.createElement("li");
                        fileLine.textContent = "No files selected.";
                        fileList.appendChild(fileLine);

                        submitButton.classList.add("hidden");
                        selectButton.classList.remove("hidden");
                    }
                }

                submitButton.addEventListener("click", function(ev) {
                    var files = selectedFiles,
                        transfers = new Array(files.length),
                        pList = document.getElementById("progress-list");

                    updateSelectedFiles([]);

                    pList.innerHTML;
                    for (var i = 0; i < files.length; i++) {
                        transfers[i] = new Transfer(files[i]);
                        pList.appendChild(transfers[i].domElement);
                        transfers[i].updateProgress(0);
                        transfers[i].doUpload();
                    }

                    ev.preventDefault();
                }, false);

                fileInput.addEventListener("change", function(ev) {
                    updateSelectedFiles(ev.target.files);
                }, false);

                var dummyEv = new Event("change");
                fileInput.dispatchEvent(dummyEv);

                selectButton.addEventListener("click", function (ev) {
                    fileInput.click();
                    ev.preventDefault();
                }, false);
                fileList.addEventListener("click", function (ev) {
                    fileInput.click();
                    ev.preventDefault();
                }, false);

                document.documentElement.addEventListener("dragenter", function (ev) {
                    ev.stopPropagation();
                    ev.preventDefault();

                    dropZone.style.display = "block";
                }, false)
                dropZone.addEventListener("dragenter", function (ev) {
                    ev.stopPropagation();
                    ev.preventDefault();
                }, false)
                dropZone.addEventListener("dragleave", function (ev) {
                    ev.stopPropagation();
                    ev.preventDefault();

                    dropZone.style.display = "none";
                }, false)
                dropZone.addEventListener("dragover", function (ev) {
                    ev.stopPropagation();
                    ev.preventDefault();
                }, false)
                dropZone.addEventListener("drop", function (ev) {
                    ev.stopPropagation();
                    ev.preventDefault();

                    console.log(ev.dataTransfer);
                    updateSelectedFiles(ev.dataTransfer.files);
                    dropZone.style.display = "none";
                }, false)
            })();
        </script>
    </body>
</html>
#end proc
#
#
#proc pageError(code: int): string =
#   let codeStr = $code
#   let msg = getStatusCode(code)
#   result = ""
<html>
    <head>
        <meta http-equiv="content-type" content="text/html; charset=utf-8">
        <title>Error: $codeStr</title>

        <style>
        </style>
    </head>

    <body>
        <h1>Error</h1>
        <p>$codeStr - $msg</p>
    </body>
</html>
#end proc
